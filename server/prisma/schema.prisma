generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String?
  username String
  avatar String
  boards Board[]
}

model Board {
  id Int @id @default(autoincrement())
  title String
  details String
  createdAt DateTime @default(now()) @db.Timestamptz(3)
  notes Note[]
  tasks Task[]
  user User @relation(fields: [userId], references: [id])
  userId Int
}

model Note {
  id Int @id @default(autoincrement())
  title String
  details String
  links NoteLink[]
  createdAt DateTime @default(now()) @db.Timestamptz(3)
  boardId Int 
  board Board @relation(fields: [boardId], references: [id], onDelete: Cascade)
}

model Task {
  id Int @id @default(autoincrement())
  title String
  details String
  img String
  links TaskLink[]
  deadline DateTime
  completed Boolean  @default(false)
  createdAt DateTime @default(now()) @db.Timestamptz(3)
  boardId Int 
  board Board @relation(fields: [boardId], references: [id], onDelete: Cascade)
}

model NoteLink {
  id Int @id @default(autoincrement())
  title String
  link String
  noteId Int
  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade)
}

model TaskLink {
  id Int @id @default(autoincrement())
  title String
  link String
  taskId Int
  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
}

